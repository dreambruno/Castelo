/*
 * Jogo feito para o projeto Castelo do Richard
 * Estou trabalhando com sitema de combate basico
 * Acesso ao banco de dados e gera��o de resultados.
 */
package castelo;

import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;



/**
 *Tela usada como base para todas as janelas
 * utilizadas no programa.
 * Utilize o addPanel() para inserir o JPanel
 * criado externamente para a aplicação.
 * 
 * @param fundo Imagem do fundo de tela.
 * @param icone Imagem do ícone da tela.
 * @param titulo Título da janela.
 * @param posicao Inserir o jDesktopPane onde a 
 * janela será inserida para definir localização.
 * @author Dream
 */
public class TelaBase extends javax.swing.JInternalFrame {

    /**
     * Método construtor da classe TelaBase.
     * @param fundo
     * @param icone
     * @param titulo
     * @param posicao
     */
    public TelaBase(String fundo, String icone, String titulo, java.awt.Dimension posicao){
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null); //retirar o painel superior
        pnCentral.setLocation(centralizar(pnCentral));
        spBase.getViewport().setOpaque(false);
        lbFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/castelo/img/" + fundo + ".jpg")));
        lbIcone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/castelo/img/" + icone + ".jpg")));
        lbTitulo.setText(titulo);
    }
    
    /**
     * Método interno. Centraliza janelas no centro da
     * janela mãe(TelaPatio).
     * @param cpn Componente a ser inserido no centro.
     * @return A localização do ponto inicial pra centralizar.
     */
    private java.awt.Point centralizar(java.awt.Component cpn){
        int y = (int) TelaPatio.getPatioSize().getHeight();
        int x = (int) TelaPatio.getPatioSize().getWidth();
        x = (x-cpn.getWidth())/2;
        y = (y-cpn.getHeight())/2;
        java.awt.Point pt = new java.awt.Point();
        pt.setLocation(x, y);
        return pt;
    }
    
    /**
     * Método usado para iniciar uma janela.
     * Ele insere o panel, centraliza e maximiza a janela.
     * @param painel Painel a ser inserido na janela.
     */
    public void iniciar(javax.swing.JPanel painel){
        spBase.setViewportView(painel);
        this.setVisible(true);
        try {
            this.setMaximum(true);
        } catch (PropertyVetoException ex) {
            System.out.println("Erro ao maximizar janela");
            Logger.getLogger(TelaBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Método usado para retirar botão de fechar.
     */
    public void tiraFechar(){
        lbFechar.setVisible(false);
    }
    
    protected void fechar(){
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        ...
    }// </editor-fold>                        

    private void lbFecharMouseClicked(java.awt.event.MouseEvent evt) {                                      
        fechar();
    }                                     


    // Variables declaration - do not modify                     
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbFechar;
    ...              
}
