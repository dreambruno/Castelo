/*
 * Jogo feito para o projeto Castelo do Richard
 * Estou trabalhando com sitema de combate basico
 * Acesso ao banco de dados e gera��o de resultados.
 */
package castelo;

import javax.swing.JOptionPane;

/**
 * Panel a ser usado na tela de criação do
 * personagem.
 * @author Dream
 */
public class PnCriacao extends javax.swing.JPanel {

    private int atb;
    private Personagem personagem;
    
    /**
     * Creates new form PnCriacao
     */
    public PnCriacao() {
        initComponents();
        atb = 7;
        personagem = new Personagem();
        personagem.setJob(new Job(cbClasse.getSelectedIndex()+1, personagem));
        status();
    }
    
    /**
     * Método interno. Usado para setar o valor máximo 
     * e mínimo que um atributo pode ter.
     */
    private void atributo(){
            // Atribuindo valores
        int pw = (int)cPoder.getValue();
        int ag = (int)cAgilidade.getValue();
        int vg = (int)cVigor.getValue();
        atb = 31 - (pw + ag + vg); // 31 = 7 + força + agilidade + vigor
            // Mostrando total de atributos
        lbAtributo.setText("Atributos:"+(atb==0?" ":" 0")+atb+" disponíve"+(atb<=1?"l.":"is."));
            // Setando valores maximos e atuais
        cPoder.setModel(new javax.swing.SpinnerNumberModel(pw, 8, pw+atb, 1));
        cAgilidade.setModel(new javax.swing.SpinnerNumberModel(ag, 8, ag+atb, 1));
        cVigor.setModel(new javax.swing.SpinnerNumberModel(vg, 8, vg+atb, 1));
            // HABILITAR BOTÃO DE CRIAR.
        if(atb > 0){
            btCriar.setEnabled(false);
        }else{
            btCriar.setEnabled(true);
        }
    }
    
    /**
     * Método interno. Muda os labels que contem as estatísticas
     * do personagem a ser criado. Mudança ocorre a cada alteração
     * nos atributos.
     */
    private void status(){
        personagem.setPoder((int)cPoder.getValue());
        personagem.setAgilidade((int)cAgilidade.getValue());
        personagem.setVigor((int)cVigor.getValue());
        personagem.getJob().setAtb(personagem.getPoder(), personagem.getAgilidade(), personagem.getVigor());
            // Preenche os valores de referência
        java.text.DecimalFormat df = new java.text.DecimalFormat("0.###");
        lbAcerto1.setText("Acerto: "+personagem.getJob().getPrecisao()+"%");
        lbAcertoCritico1.setText("Ac. Crítico: "+personagem.getJob().getCriticoChance()+"%");
        lbDano1.setText("Dano: "+personagem.getJob().getDano());
        lbDanoCritico1.setText("Dn. Crítico: "+df.format(personagem.getJob().getCriticoDano())+"x");
        lbDefesa1.setText("Defesa: "+personagem.getJob().getDefesa());
        lbEsquiva1.setText("Esquiva: "+personagem.getJob().getEsquiva()+"%");
        lbVelocidade1.setText("Velocidade: x"+df.format(personagem.getJob().getVelocidade()));
        lbVida1.setText("Vida: "+personagem.getJob().getHp());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
      ...
    }// </editor-fold>                        

    private void cbClasseActionPerformed(java.awt.event.ActionEvent evt) {                                         
        personagem.setJob(new Job(cbClasse.getSelectedIndex()+1, personagem));
        status();
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                        

    private void cPoderStateChanged(javax.swing.event.ChangeEvent evt) {                                    
        atributo();
        status();
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                   

    private void cAgilidadeStateChanged(javax.swing.event.ChangeEvent evt) {                                        
        atributo();
        status();
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                       

    private void cVigorStateChanged(javax.swing.event.ChangeEvent evt) {                                    
        atributo();
        status();
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                   

    private void rdFemininoMouseMoved(java.awt.event.MouseEvent evt) {                                      
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                     

    private void rdFemininoMouseReleased(java.awt.event.MouseEvent evt) {                                         
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                        

    private void rdFemininoMouseExited(java.awt.event.MouseEvent evt) {                                       
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                      

    private void rdMasculinoMouseMoved(java.awt.event.MouseEvent evt) {                                       
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                      

    private void rdMasculinoMouseReleased(java.awt.event.MouseEvent evt) {                                          
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                         

    private void rdMasculinoMouseExited(java.awt.event.MouseEvent evt) {                                        
        Castelo.getJanela(this).repaint();
        TelaPatio.repinta();
    }                                       

    private void btDuvidaActionPerformed(java.awt.event.ActionEvent evt) {                                         
        JOptionPane.showInternalMessageDialog(this, personagem.getJob().getDescricao(), "Senta que lá vem história...", -1);
    }                                        

    private void btCriarActionPerformed(java.awt.event.ActionEvent evt) {                                        
        int n = txNome.getText().length();
        if(n <= 16 && n > 2){ // Testa se tamanho está no padrão correto
            if(ConexaoBanco.Registro.testaDuplicidade("personagem", txNome.getText())){ // busca duplicidade de nomes do personagem
                // Setando dados
                personagem.setNome(txNome.getText());
                personagem.setSexo(rdMasculino.isSelected());
                personagem.setHp(personagem.getJob().getHp());
                personagem.setId(ConexaoBanco.Registro.criaPersonagem(personagem)); // criando personagem

                // Envia dados ao Castelo
                Castelo.inserePersonagem(personagem);
                ConexaoBanco.Registro.atualizaLogin(Castelo.getLogin()); // atualiza login no banco de dados
                // Finalizando
                Castelo.getJanela(this).dispose();
                JOptionPane.showInternalMessageDialog(TelaPatio.lbBase, "Bem vindo ao Reino, amigo!", "Tenha um futuro próspero!", -1);
                TelaPatio.abrePatio(new javax.swing.ImageIcon(getClass().getResource("/castelo/img/gmPatio.jpg")));
            }else{
                // avisa que o nome já existe
                JOptionPane.showInternalMessageDialog(this, "Esse nome já existe!", "Ladrão de identidade?", 2);
            }
        }else{
            // avisa sobre tamanho do nome
            JOptionPane.showInternalMessageDialog(this, "O nome deve conter de \n3 a 16 caracteres.", "Voçê é algum nobre?", 2);
        }
    }                                       


    // Variables declaration - do not modify                     
    private javax.swing.JButton btCriar;
    private javax.swing.JButton btDuvida;
    private javax.swing.JSpinner cAgilidade;
    ...
}
